<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
">
    <!-- IOC 注解扫描开启-->
    <context:component-scan base-package="com.prim.service"/>


    <!-- 整合mybatis -->
    <!-- 引入jdbc.properties 引入外部的properties文件需要使用 context:property-placeholder -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 把sqlSessionFactory的创建权交给了spring，帮助我们生产sqlSession对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- POJO别名设置 -->
        <property name="typeAliasesPackage" value="com.prim.domain"/>
        <!-- 引入加载myBatis的核心配置文件，也可以不用去加载的 -->
        <!--        <property name="configLocation" value="classpath:SqlMapConfig.xml"/>-->
    </bean>

    <!-- mapper映射扫描,对mapper接口扫描，并且生产代理对象，存储到IOC容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.prim.dao"/>
    </bean>


    <!-- spring 声明式事务 -->
    <!-- 配置事务管理器 必须要配置的-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 数据源对象注入 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 注解方式控制事务 -->
    <tx:annotation-driven/>
</beans>