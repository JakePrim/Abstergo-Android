server:
  port: 9100

spring:
  application:
    name: lagou-service-order
  # MQ配置
  rabbitmq:
    host: 172.16.160.130
    port: 5672
    username: prim
    password: 123456
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/springclouddata?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
    username: root
    password: 123456
    type: com.zaxxer.hikari.HikariDataSource # Hikari 数据库连接池
  jackson:
    # 全局格式化实现
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  # spring cloud config配置中心服务配置
  cloud:
    config:
      # config客户端配置,和ConfigServer通信，并告知ConfigServer希望获取的配置信息在哪个文
      #件中
      name: lagou-page-server-application
      profile: dev # 后缀名称
      label: master # 分支名称
      uri: http://localhost:9400
eureka:
  client: # Eureka server本身也是Eureka的一个客户端，因为在集群下需要与其他Eureka Server 进行数据同步
    service-url: # 定义eureka server url
      defaultZone: http://LagouCloudEurekaServerA:9300/eureka,http://LagouCloudEurekaServerB:9301/eureka
  instance:
    #    hostname: localhost # 当前Eureka实例的主机名
    # 使用IP注册，否则会使用主机名进行注册（此处考虑到对老版本的兼容，新版本经过试验都是IP）
    prefer-ip-address: true
    # 自定义实例显示格式，如加上版本号，便于多版本管理，注意是ip-address z=早期版本是ipAddress
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@
# 开启日志
logging:
  level:
    com:
      prim:
        order:
          mapper: debug

# mybatis配置
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml

# 针对的被调用方微服务名称，不加就是全局生效,针对商品微服务
lagou-service-goods:
  ribbon:
    # 请求连接超时时间
    ConnectTimeout: 2000
    # 请求处理超时时间
    ReadTimeout: 15000
    # 对所有操作都进行重试
    OkToRetryOnAllOperations: true
    # 根据如上配置，当访问到故障请求的时候，它会再尝试访问一次当前实例
    MaxAutoRetries: 0 # 对当前选中实例重试次数，不包括第一次调用
    MaxAutoRetriesNextServer: 0 # 切换实例的重试次数
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule # 采用随机策略 默认为区域策略 一般生产环境都是使用默认配置 一般不需要改动

# hystrix 熔断策略配置
hystrix:
  threadpool:
    default:
      coreSize: 16 # 并发执行的最大线程数，默认是10
      maxQueueSize: 10000 # BlockingQueue的最大队列数，默认值 -1
      queueSizeRejectionThreshold: 6000 # 即使maxQueueSize没有达到，到达了queueSizeRejectionThreshold的值后，请求也会被拒绝，默认值5
  command:
    default:
      circuitBreaker:
        # 强制打开熔断器，如果该属性设置为true，强制断路器进入打开状态，将会拒绝所有的请求。
        # 默认false关闭的
        forceOpen: false
        # 触发熔断错误比例阈值，默认值50%
        errorThresholdPercentage: 50
        # 熔断后休眠时长，默认值5秒
        sleepWindowInMilliseconds: 5000
        # 熔断触发最小请求次数，默认值是20
        requestVolumeThreshold: 20
      execution:
        isolation:
          thread:
            # 熔断超时设置，默认为1秒
            timeoutInMilliseconds: 5000


# springboot 中暴露健康检查等断点接口  /actuator/health
management:
  endpoints:
    web:
      exposure:
        include: "*" # "*" 暴露所有端口
  # 暴露的细节
  endpoint:
    health:
      show-details: always

# 开启feign熔断功能
feign:
  hystrix:
    enabled: true