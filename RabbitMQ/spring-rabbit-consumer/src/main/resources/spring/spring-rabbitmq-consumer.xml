<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/rabbit
        http://www.springframework.org/schema/rabbit/spring-rabbit.xsd
">
    <!--  1.配置连接Rabbit工厂   -->
    <rabbit:connection-factory
            id="connectionFactory"
            host="172.16.150.66"
            port="5672"
            username="prim"
            password="123456"
            virtual-host="/edu"/>
    <!--  2. 配置队列  -->
    <!--    <rabbit:queue name="dlx_queue"/>-->
    <!--  3. 配置RabbitAdmin：主要用于在Java代码中对队列的管理，用来创建、绑定、删除队列与交换机，发送消息等操作  -->
    <rabbit:admin connection-factory="connectionFactory"/>
    <!--  4. 注解扫描 -->
    <context:component-scan base-package="listener"/>
    <!--  5. 配置监听
          acknowledge="manual" 手动确认
          prefetch="3" 一次性消费的消息数量，会告诉RabbitMQ不要同时给一个消费者推送多于N个消息，一但有N个消息 还没有ack
          则Consumer将阻塞直到消息被ack
    -->
    <rabbit:listener-container connection-factory="connectionFactory" acknowledge="manual" prefetch="3">
        <!-- 监听死信队列 -->
        <rabbit:listener ref="consumerListener" queue-names="dlx_queue"/>
    </rabbit:listener-container>

</beans>