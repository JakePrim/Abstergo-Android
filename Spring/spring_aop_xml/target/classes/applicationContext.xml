<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--    &lt;!&ndash; 目标类交给IOC容器 &ndash;&gt;-->
    <!--    <bean id="accountService" class="com.example.impl.AccountServiceImpl"></bean>-->

    <!--    &lt;!&ndash; 通知类交给IOC容器 &ndash;&gt;-->
    <!--    <bean id="accountAdvice" class="com.example.advice.AccountAdvice"></bean>-->

    <!-- IOC创建bean实例注解扫描 -->
    <context:component-scan base-package="com.example"/>

    <!-- AOP 注解方式 自动代理配置,spring 采用动态代理 完成织入增强
        expose-proxy
        proxy-target-class = true 强制使用cglib动态代理
    -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>


    <!-- AOP 配置 -->
<!--    <aop:config>-->
<!--        &lt;!&ndash; 抽取切点表达式 &ndash;&gt;-->
<!--        <aop:pointcut id="accountPointcut"-->
<!--                      expression="execution(public void com.example.impl.AccountServiceImpl.*(..))"/>-->
<!--        &lt;!&ndash;-->
<!--        配置切面：切入点+通知-->
<!--        ref:通知类的bean id-->
<!--        &ndash;&gt;-->
<!--        <aop:aspect ref="accountAdvice">-->
<!--            &lt;!&ndash;-->
<!--                前置增强-->
<!--                method:调用的通知类的哪个方法-->
<!--                pointcut:配置目标类的transfer方法切点，当执行该方法的执行之前会执行before方法-->
<!--            &ndash;&gt;-->
<!--            &lt;!&ndash;            <aop:before method="before" pointcut-ref="accountPointcut"/>&ndash;&gt;-->
<!--            &lt;!&ndash;            &lt;!&ndash; 后置通知&ndash;&gt;&ndash;&gt;-->
<!--            &lt;!&ndash;            <aop:after-returning method="after" pointcut-ref="accountPointcut"/>&ndash;&gt;-->
<!--            &lt;!&ndash;            &lt;!&ndash; 异常通知 &ndash;&gt;&ndash;&gt;-->
<!--            &lt;!&ndash;            <aop:after-throwing method="afterThowing" pointcut-ref="accountPointcut"/>&ndash;&gt;-->
<!--            &lt;!&ndash;            &lt;!&ndash; 最终通知 &ndash;&gt;&ndash;&gt;-->
<!--            &lt;!&ndash;            <aop:after method="finals" pointcut-ref="accountPointcut"/>&ndash;&gt;-->
<!--            &lt;!&ndash; 环绕通知 &ndash;&gt;-->
<!--            <aop:around method="around" pointcut-ref="accountPointcut"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->


</beans>